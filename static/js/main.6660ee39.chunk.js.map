{"version":3,"sources":["context/auth-context.js","components/Loader/Loader.js","providers/fetchClient.js","services/auth.js","context/user-context.js","theme/Theme.js","theme/styles.js","App.js","context/index.js","index.js","helpers/bootstrap.js","helpers/auth.js","helpers/constants.js"],"names":["AuthContext","createContext","AuthProvider","props","useState","firstAttemptFinished","setFirstAttemptFinished","useAsync","promiseFn","bootstrapAppData","data","user","error","isRejected","isPending","isSettled","reload","useLayoutEffect","login","useCallback","a","authLogin","access_token","refresh_token","setAccessToken","setRefreshToken","Promise","reject","logout","clearToken","css","color","message","Provider","value","useAuth","context","useContext","undefined","Error","Loader","children","options","api_url","process","REACT_APP_API_URL","refreshTokenUrl","access_token_name","ACCESS_TOKEN","refresh_token_name","REFRESH_TOKEN","instance","OAuth2","createInstance","getUser","client","get","post","UserContext","UserProvider","setUser","useEffect","Theme","theme","styles","space","sizes","regular","small","colors","black","loadAuthenticatedApp","AuthenticatedApp","lazy","UnauthenticatedApp","GlobalStyle","createGlobalStyle","App","useUser","titleTemplate","fallback","AppProviders","Sentry","dsn","REACT_APP_SENTRY_URL","environment","debug","release","name","version","ReactDOM","render","document","getElementById","getToken","scope","email","localStorage","getItem","removeItem","token","setItem","MEDIADESKTOP"],"mappings":"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","file":"static/js/main.6660ee39.chunk.js","sourcesContent":["import React, { createContext, useState, useLayoutEffect, useContext, useCallback } from 'react'\nimport { useAsync } from 'react-async'\n\nimport { login as authLogin } from 'services/auth'\nimport { setAccessToken, setRefreshToken, clearToken, bootstrapAppData } from 'helpers'\n\nimport Loader from 'components/Loader'\n\nconst AuthContext = createContext()\n\nconst AuthProvider = props => {\n  const [firstAttemptFinished, setFirstAttemptFinished] = useState(false)\n  const { data = { user: null }, error, isRejected, isPending, isSettled, reload } = useAsync({\n    promiseFn: bootstrapAppData\n  })\n\n  useLayoutEffect(() => {\n    if (isSettled) {\n      setFirstAttemptFinished(true)\n    }\n  }, [isSettled])\n\n  const login = useCallback(async data => {\n    try {\n      const { access_token, refresh_token, ...user } = await authLogin(data)\n      setAccessToken(access_token)\n      setRefreshToken(refresh_token)\n      reload()\n\n      return { user }\n    } catch (error) {\n      console.log(error)\n      return Promise.reject(error)\n    }\n  }, [])\n\n  const logout = useCallback(() => {\n    clearToken()\n    reload()\n  }, [])\n\n  if (!firstAttemptFinished) {\n    if (isPending) {\n      return <Loader />\n    }\n\n    if (isRejected) {\n      return (\n        <div css={{ color: 'red' }}>\n          <p>Uh oh... There's a problem. Try refreshing the app.</p>\n          <pre>{error.message}</pre>\n        </div>\n      )\n    }\n  }\n\n  return <AuthContext.Provider value={{ data, login, logout }} {...props} />\n}\n\nconst useAuth = () => {\n  const context = useContext(AuthContext)\n\n  if (context === undefined) {\n    throw new Error('useAuth must be used within a AuthProvider')\n  }\n\n  return context\n}\n\nexport { AuthProvider, useAuth }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Loader = ({ children = 'carregando' }) => <p>{children}</p>\n\nLoader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n}\n\nexport default Loader\n","import { OAuth2 } from '@naveteam/pandora-frontend'\n\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from 'helpers'\n\nconst options = {\n  api_url: process.env.REACT_APP_API_URL,\n  refreshTokenUrl: '/v1/users/refresh-token',\n  access_token_name: ACCESS_TOKEN,\n  refresh_token_name: REFRESH_TOKEN\n}\n\nconst instance = OAuth2.createInstance(options)\n\nexport default instance\n","import client from 'providers/fetchClient'\n\nexport const getUser = () => client.get('/v1/me')\n\nexport const login = data => client.post('/v1/users/login', data)\n","import React, { createContext, useContext, useState, useEffect } from 'react'\n\nimport { useAuth } from 'context/auth-context'\n\nconst UserContext = createContext()\n\nconst useUser = () => {\n  const context = useContext(UserContext)\n\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider')\n  }\n\n  return context\n}\n\nconst UserProvider = props => {\n  const [user, setUser] = useState(null)\n\n  const { data } = useAuth()\n\n  useEffect(() => {\n    if (!data) {\n      return\n    }\n\n    setUser(data.user)\n  }, [data])\n\n  return <UserContext.Provider value={{ user, setUser }} {...props} />\n}\n\nexport { UserProvider, useUser }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from 'styled-components'\n\nimport { styles } from 'theme'\n\nconst Theme = ({ theme = styles, children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>\n\nTheme.propTypes = {\n  theme: PropTypes.object\n}\n\nexport default Theme\n","export const styles = {\n  space: [],\n  sizes: {\n    regular: 200,\n    small: 40\n  },\n  colors: {\n    black: '#000'\n  }\n}\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport Helmet from 'react-helmet'\n// import { Provider } from 'react-redux'\n// import createHistory from 'history/createBrowserHistory'\n// import store from './redux/store'\n\nimport { ThemeProvider } from '@naveteam/saturn'\nimport Loader from 'components/Loader'\n\nimport { useUser } from 'context/user-context'\n\nimport Theme from 'theme'\n\nimport 'sanitize.css/sanitize.css'\n\nconst loadAuthenticatedApp = () => import('./AuthenticatedApp')\nconst AuthenticatedApp = lazy(loadAuthenticatedApp)\nconst UnauthenticatedApp = lazy(() => import('./UnauthenticatedApp'))\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  border: 0;\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  outline: none;\n}\n\nbutton, a {\n  cursor: pointer;\n  &:disabled{\n    cursor: not-allowed;\n  }\n}\n`\n\nconst App = () => {\n  const { user } = useUser()\n\n  useEffect(() => {\n    loadAuthenticatedApp()\n  }, [])\n\n  return (\n    // <Provider store={store}>\n    <ThemeProvider>\n      <Theme>\n        <Helmet titleTemplate='Nave.rs | %s' />\n        <GlobalStyle />\n        <Suspense fallback={<Loader />}>\n          <Router>{user ? <AuthenticatedApp /> : <UnauthenticatedApp />}</Router>\n        </Suspense>\n      </Theme>\n    </ThemeProvider>\n    // </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\n\nimport { AuthProvider } from './auth-context'\nimport { UserProvider } from './user-context'\n\nconst AppProviders = ({ children }) => (\n  <AuthProvider>\n    <UserProvider>{children}</UserProvider>\n  </AuthProvider>\n)\n\nexport default AppProviders\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as Sentry from '@sentry/browser'\n\nimport App from './App'\n\nimport AppProviders from 'context'\n\nimport { version, name } from '../package.json'\n\nif (process.env.REACT_APP_NODE_ENV === 'production') {\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_URL,\n    environment: process.env.REACT_APP_NODE_ENV,\n    debug: process.env.REACT_APP_NODE_ENV !== 'prodution',\n    release: `${name}@${version}`\n  })\n}\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root')\n)\n","import * as Sentry from '@sentry/browser'\n\nimport { getUser } from 'services/auth'\nimport { getToken } from 'helpers'\n\nconst bootstrapAppData = async () => {\n  const token = getToken()\n\n  if (!token) {\n    return { user: null }\n  }\n\n  const user = await getUser()\n\n  if (process.env.REACT_APP_NODE_ENV === 'production') {\n    Sentry.configureScope(scope =>\n      scope.setUser({\n        // Adicionar outras informações relevantes do usuários\n        email: user.email\n      })\n    )\n  }\n\n  if (!user) {\n    return { user: null }\n  }\n\n  return { user }\n}\n\nexport { bootstrapAppData }\n","import { ACCESS_TOKEN, REFRESH_TOKEN } from 'helpers'\n\nexport const getToken = () => localStorage.getItem(ACCESS_TOKEN)\n\nexport const clearToken = () => {\n  localStorage.removeItem(ACCESS_TOKEN)\n  localStorage.removeItem(REFRESH_TOKEN)\n}\n\nexport const setAccessToken = token => localStorage.setItem(ACCESS_TOKEN, token)\n\nexport const setRefreshToken = token => localStorage.setItem(REFRESH_TOKEN, token)\n","export const MEDIADESKTOP = 1200\nexport const MEDIATABLET = 768\n\nexport const ACCESS_TOKEN = '@react-boilerplate-access-token'\n\nexport const REFRESH_TOKEN = '@react-boilerplate-refresh-token'\n"],"sourceRoot":""}